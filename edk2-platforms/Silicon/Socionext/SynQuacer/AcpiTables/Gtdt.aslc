/** @file
*  Generic Timer Description Table (GTDT)
*
*  Copyright (c) 2012 - 2016, ARM Limited. All rights reserved.
*  Copyright (c) 2018, Linaro Limited. All rights reserved.
*
*  This program and the accompanying materials are licensed and made available
*  under the terms and conditions of the BSD License which accompanies this
*  distribution.  The full text of the license may be found at
*  http://opensource.org/licenses/bsd-license.php
*
*  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
*  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
*
**/

#include <Library/AcpiLib.h>
#include <Library/PcdLib.h>
#include <IndustryStandard/Acpi.h>

#include "AcpiTables.h"

#define SYSTEM_TIMER_BASE_ADDRESS     0xFFFFFFFFFFFFFFFF

#define GTDT_GLOBAL_FLAGS  0
#define GTDT_GTIMER_FLAGS  EFI_ACPI_6_0_GTDT_TIMER_FLAG_TIMER_INTERRUPT_POLARITY

#pragma pack (1)

typedef struct {
  EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE          Gtdt;
  EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE                  TimerBase;
  EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE            TimerFrame;
  EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE     Watchdog;
} EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLES;

#pragma pack ()

EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLES Gtdt = {
  {
    __ACPI_HEADER(
      EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE_SIGNATURE,
      EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLES,
      EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE_REVISION
    ),
    SYSTEM_TIMER_BASE_ADDRESS,                    // UINT64  PhysicalAddress
    0,                                            // UINT32  Reserved
    FixedPcdGet32 (PcdArmArchTimerSecIntrNum),    // UINT32  SecurePL1TimerGSIV
    GTDT_GTIMER_FLAGS,                            // UINT32  SecurePL1TimerFlags
    FixedPcdGet32 (PcdArmArchTimerIntrNum),       // UINT32  NonSecurePL1TimerGSIV
    GTDT_GTIMER_FLAGS,                            // UINT32  NonSecurePL1TimerFlags
    FixedPcdGet32 (PcdArmArchTimerVirtIntrNum),   // UINT32  VirtualTimerGSIV
    GTDT_GTIMER_FLAGS,                            // UINT32  VirtualTimerFlags
    FixedPcdGet32 (PcdArmArchTimerHypIntrNum),    // UINT32  NonSecurePL2TimerGSIV
    GTDT_GTIMER_FLAGS,                            // UINT32  NonSecurePL2TimerFlags
    0xFFFFFFFFFFFFFFFF,                           // UINT64  CntReadBasePhysicalAddress
    2,                                            // UINT32  PlatformTimerCount
    sizeof (EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE) // UINT32 PlatfromTimerOffset
  },
  {
    EFI_ACPI_6_0_GTDT_GT_BLOCK,                   // UINT8  Type
    sizeof (EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE) +
    sizeof (EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE),
                                                  // UINT16 Length
    EFI_ACPI_RESERVED_BYTE,                       // UINT8  Reserved
    0x2A810000,                                   // UINT64 CntCtlBase
    1,                                            // UINT32 GTBlockTimerCount
    sizeof (EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE) // UINT32 GTBlockTimerOffset
  },
  {
    0,                                            // UINT8  GTFrameNumber
    {0, 0, 0},                                    // UINT8  Reserved[3]
    0x2A830000,                                   // UINT64 CntBaseX
    0xFFFFFFFFFFFFFFFF,                           // UINT64 CntEL0BaseX
    92,                                           // UINT32 GTxPhysicalTimerGSIV
    0,                                            // UINT32 GTxPhysicalTimerFlags
    0,                                            // UINT32 GTxVirtualTimerGSIV
    0,                                            // UINT32 GTxVirtualTimerFlags
    EFI_ACPI_6_0_GTDT_GT_BLOCK_COMMON_FLAG_ALWAYS_ON_CAPABILITY
                                                  // UINT32 GTxCommonFlags
  },
  EFI_ACPI_6_0_SBSA_GENERIC_WATCHDOG_STRUCTURE_INIT (
    FixedPcdGet32 (PcdGenericWatchdogRefreshBase),
    FixedPcdGet32 (PcdGenericWatchdogControlBase),
    94,
    0),
};

//
// Reference the table being generated to prevent the optimizer
// from removing the data structure from the executable
//
VOID* CONST ReferenceAcpiTable = &Gtdt;
