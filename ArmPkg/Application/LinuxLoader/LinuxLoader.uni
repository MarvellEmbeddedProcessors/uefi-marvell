// *++
//
// Copyright (c) 2014-2015, ARM Ltd. All rights reserved.<BR>
//
// This program and the accompanying materials are licensed and made available
// under the terms and conditions of the BSD License which accompanies this
// distribution.  The full text of the license may be found at
// http://opensource.org/licenses/bsd-license.php
//
// THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
// WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
//
//
// Module Name:
//
//   LinuxLoader
//
// Abstract:
//
//   String definitions for the LinuxLoader UEFI application
//
// Revision History:
//
// --*/

/=#

#langdef   en-US "English"

#string STR_SHELL_INVALID_PARAMETER  #language en-US  "Invalid parameter : '%s'\r\n"
#string STR_ERROR                    #language en-US  "Linux boot loader error - %r.\r\n"

#string STR_INVALID_FLAG             #language en-US  "Invalid flag or flag value '%c%c'.\r\n"
#string STR_INVALID_PARAMETER        #language en-US  "Invalid parameter.\r\n"
#string STR_MISSING_KERNEL_PATH      #language en-US  "Path to the Linux kernel not defined.\r\n"
#string STR_MISSING_VALUE            #language en-US  "Missing value for flag '-%c'\r\n"
#string STR_ATAG_FDT_CONFLICT        #language en-US  "The Linux Kernel can not have both ATAG and FDT support.\r\n"



#string STR_HELP                     #language en-US  "USAGE:\r\n"
"LinuxLoader KernelPath [-f InitrdPath] [-a | -d FdtPath] [-c CommandLine]\r\n"
"\r\n"
" -f  Path to the RAM root file system.\r\n"
" -a  Indicate a Linux kernel with ATAG support.\r\n"
" -d  Path to the Flat Device Tree.\r\n"
" -c  Linux Kernel command line.\r\n"
"\r\n"
"The 'LinuxLoader.efi' UEFI application is intended to boot Linux Kernel\r\n"
"images containing or not an 'EFI Boot Stub' (see www.kernel.org/doc/\r\n"
"Documentation/efi-stub.txt for more information).\r\n"
"\r\n"
"This application can be called either from the EFI Shell or during the\r\n"
"Boot Device Selection (BDS) phase of the boot flow.\r\n"
"\r\n"
"If the application is called during the BDS phase then all the paths\r\n"
"must be device paths in the text form.\r\n"
"\r\n"
"If the application is called from the EFI Shell, the usual alias\r\n"
"and variable substitutions apply. Moreover, each path can be either\r\n"
"an EFI Shell file path or a device path in the text form. The application\r\n"
"first tries to interpret the path as an EFI Shell file path. If the\r\n"
"interpretation fails then the path is handled as a device path in the\r\n"
"text form.\r\n"
"\r\n"
"EXAMPLES:\r\n"
"  * Boot from the EFI Shell the Linux kernel 'Image' with the command\r\n"
"    line 'console=ttyAMA0,115200 earlycon=pl011,0x7ff80000' using the FDT\r\n"
"    'fdt.dtb' and the RAM boot file system 'ramdisk.img', all files\r\n"
"    being located at the root of the 'fs2:' volume :\r\n"
"    Shell> LinuxLoader fs2:Image -d fs2:fdt.dtb -f fs2:ramdisk.img \\\r\n"
"           -c "console=ttyAMA0,115200 earlycon=pl011,0x7ff80000"\r\n"
"    or
"    fs2:\> LinuxLoader Image -d fdt.dtb -f ramdisk.img             \\\r\n"
"           -c "console=ttyAMA0,115200 earlycon=pl011,0x7ff80000"\r\n"
"  * Arguments to pass to the application for the same boot but from\r\n"
"    the boot manager, the device path to the 'fs2:' volume being \r\n"
"    VenHw(E7223039-5836-41E1-B542-D7EC736C5E59) :\r\n"
"    VenHw(E7223039-5836-41E1-B542-D7EC736C5E59)/Image          \\\r\n"
"    -d VenHw(E7223039-5836-41E1-B542-D7EC736C5E59)/fdt.dtb     \\\r\n"
"    -f VenHw(E7223039-5836-41E1-B542-D7EC736C5E59)/ramdisk.img \\\r\n"
"    -c "console=ttyAMA0,115200 earlycon=pl011,0x7ff80000"\r\n"
"  * Arguments to pass to boot ATAG linux kernel:\r\n"
"    VenHw(E7223039-5836-41E1-B542-D7EC736C5E59)/Image          \\\r\n"
"    -a 2272                                                    \\\r\n"
"    -f VenHw(E7223039-5836-41E1-B542-D7EC736C5E59)/ramdisk.img \\\r\n"
"    -c "console=ttyAMA0,115200 earlycon=pl011,0x7ff80000"\r\n"
